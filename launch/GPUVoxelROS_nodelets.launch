<?xml version="1.0"?>
<launch>
    <!-- Input arguments -->
    <arg name="argID"               default="0"/>
    <arg name="argVehicle"          default="heifu"/>
    <arg name="argNamespace"        default="$(arg argVehicle)$(arg argID)"/>
    <arg name="argSimulation"       default="false"/>
    <arg name="argNodeRate"         default="100.0"/>
    <arg name="argNodeletManager"   default=""/>
    <arg name="argNodeletManagerHelper" default="$(eval 'GPUVoxelsROS_manager_nodelet' if (argNodeletManager == '') else argNodeletManager)"/>

    <group if="$(eval arg('argNodeletManager') == '')">
        <node pkg="nodelet" type="nodelet" name="$(arg argNodeletManagerHelper)"  args="manager" ns="$(arg argNamespace)" output="screen">
            <param name="num_worker_threads" value="32" />
        </node>
    </group>

<!--    <node pkg="gpu_voxels_ros" name="deleteMap" type="RemoveOldMap.sh"/>-->

    <node pkg="nodelet" type="nodelet" name="gpu_voxels_ros_nodelet" args="load GPUVoxelsROSNodelet $(arg argNodeletManagerHelper)" ns="$(arg argNamespace)" output="screen">

        <param name="paramNodeRate"         type="double" value="$(arg argNodeRate)" />

        <rosparam param="paramMapSize">[128, 128, 64]</rosparam>

        <rosparam file="$(find gpu_voxels_ros)/config/GPU-Voxels.yaml" if="$(arg argSimulation)" />
        <rosparam file="$(find gpu_voxels_ros)/config/GPU-Voxels_Jetson.yaml" unless="$(arg argSimulation)"/>
    </node>
</launch>
